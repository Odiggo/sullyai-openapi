openapi: 3.1.0
info:
  title: Sully API
  description: The Sully API is a robust platform designed to empower healthcare technology companies and Electronic Health Record (EHR) vendors by integrating advanced AI-driven clinical capabilities to help save healthcare providers (HCPs) time and make better decisions.
  version: "0.2.0"
servers:
  - url: https://api.sully.ai
    description: Sully Production API
  - url: https://api-testing.sully.ai
    description: Sully Testing API
security:
  - apiKeyAuth: []
    accountIdAuth: []
tags:
  - name: Notes
    description: Operations for creating and managing clinical notes from medical encounters
  - name: Note Styles
    description: Operations for managing templates and formatting styles for clinical notes
  - name: Audio Transcriptions
    description: Operations for converting medical audio to text, including streaming capability
  - name: Utilities
    description: Utility operations for transforming and processing medical data
  - name: Codings
    description: Operations for medical coding analysis including ICD-10 and CPT code extraction
  - name: Macros
    description: Operations for detecting and expanding text macros in medical documentation
paths:
  /v1/notes/{noteId}:
    get:
      tags:
        - Notes
      summary: Get a single note by ID
      operationId: getNoteById
      description: Gets a single note based on the ID supplied
      parameters:
        - name: noteId
          in: path
          description: ID of note to get
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Note response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/GetNoteResponse"
        "400":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Notes
      summary: Delete a note by ID
      operationId: deleteNoteById
      description: Deletes a single note based on the ID supplied
      parameters:
        - name: noteId
          in: path
          description: ID of note to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Note deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse"
        "400":
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/notes:
    post:
      tags:
        - Notes
      summary: Create a new clinical note
      operationId: createNote
      description: Creates a new note
      requestBody:
        description: Note to add
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNotePayload"
        required: true
      responses:
        "200":
          description: Note response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateNoteResponse"
        "400":
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/note-styles:
    post:
      tags:
        - Note Styles
      summary: Create a new note style template
      operationId: createNoteStyle
      description: Creates a note style
      requestBody:
        description: Note style to add
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNoteStylePayload"
        required: true
      responses:
        "200":
          description: Note style response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateNoteStyleResponse"
        "400":
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/audio/transcriptions/{transcriptionId}:
    get:
      tags:
        - Audio Transcriptions
      summary: Get a single audio transcription by ID
      operationId: getAudioTranscriptionById
      description: Gets a single audio transcription based on the ID supplied
      parameters:
        - name: transcriptionId
          in: path
          description: ID of the transcription to retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Audio transcription response
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/GetAudioTranscriptionResponse"
        "400":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Audio Transcriptions
      summary: Delete an audio transcription by ID
      operationId: deleteAudioTranscriptionById
      description: Deletes a single audio transcription based on the ID supplied
      parameters:
        - name: transcriptionId
          in: path
          description: ID of audio transcription to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Audio transcription deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse"
        "400":
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/audio/transcriptions:
    post:
      tags:
        - Audio Transcriptions
      summary: Create a new audio transcription
      operationId: createAudioTranscription
      description: Creates a new audio transcription
      requestBody:
        description: Audio transcription to add
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateAudioTranscriptionPayload"
        required: true
      responses:
        "200":
          description: Audio transcription response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAudioTranscriptionResponse"
        "400":
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/audio/transcriptions/stream/token:
    post:
      tags:
        - Audio Transcriptions
      summary: Create a streaming transcription token
      operationId: createStreamingTranscriptionToken
      description: Create a temporary authentication token for Streaming Speech-to-Text
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expiresIn:
                  type: integer
                  description: Duration of the token in seconds
                  example: 3600
                  minimum: 60
                  maximum: 604800
              required:
                - expiresIn
        required: true
      responses:
        "200":
          description: Audio transcription stream token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: tok_EXAMPLE123456789
        "400":
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/utils/text-to-json:
    post:
      tags:
        - Utilities
      summary: Transform unstructured text to structured JSON
      operationId: transformTextToJson
      description: >-
        Transforms unstructured text into structured JSON according to a provided schema.
        This utility endpoint extracts specific data patterns from free-form content.
      requestBody:
        description: Text and schema for transformation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TextToJsonPayload"
        required: true
      responses:
        "200":
          description: JSON data extracted from text
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextToJsonResponse"
        "400":
          description: Invalid input or schema
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server-side processing error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/codings:
    post:
      tags:
        - Codings
      summary: Create a new medical coding analysis
      operationId: createCodingAnalysis
      description: Creates a new coding analysis request from medical conversation text
      requestBody:
        description: Text content to analyze for medical coding
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCodingPayload"
        required: true
      responses:
        "200":
          description: Coding analysis request created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCodingResponse"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/codings/{codingId}:
    get:
      tags:
        - Codings
      summary: Get a coding analysis by ID
      operationId: getCodingAnalysisById
      description: Retrieves a coding analysis result by ID
      parameters:
        - name: codingId
          in: path
          description: ID of the coding analysis to retrieve
          required: true
          schema:
            type: string
            example: coding_EXAMPLE123456789
      responses:
        "200":
          description: Coding analysis result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCodingResponse"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Coding analysis not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Codings
      summary: Delete a coding analysis by ID
      operationId: deleteCodingAnalysisById
      description: Deletes a coding analysis by ID
      parameters:
        - name: codingId
          in: path
          description: ID of the coding analysis to delete
          required: true
          schema:
            type: string
            example: coding_EXAMPLE123456789
      responses:
        "204":
          description: Coding analysis successfully deleted (No Content)
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Coding analysis not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/macros/detect:
    post:
      tags:
        - Macros
      summary: Detect and expand text macros
      operationId: detectAndExpandMacros
      description: Detects macros in text and provides expanded text with the macros replaced by their expansions
      requestBody:
        description: Text to analyze for macros
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MacroDetectPayload"
        required: true
      responses:
        "200":
          description: Macro detection result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MacroDetectResponse"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    GetNoteResponse:
      type: object
      properties:
        status:
          type: string
          example: ok
          description: Status of the response
        data:
          type: object
          properties:
            id:
              type: string
              example: note_EXAMPLE123456789
              description: Unique identifier for the audio transcription
            payload:
              type: object
              description: Either markdown or JSON representation of the note. Both can be present as well.
              properties:
                markdown:
                  type: string
                  description: Markdown string of the note
                json:
                  type: object
                  description: JSON object of the note. The note style used will determine which fields are present. See the [SOAP Note](/api-reference/schemas/soap-note) example.

            status:
              type: string
              example: STATUS_DONE
              description: Processing status of the note
            timestamp:
              type: object
              properties:
                start:
                  type: integer
                  example: 1731014849730
                  description: Start timestamp
                complete:
                  type: integer
                  example: 1731014853958
                  description: Complete timestamp
        date:
          type: string
          format: date-time
          example: 2024-11-07T21:27:39Z
          description: Timestamp of the response

    CreateNotePayload:
      type: object
      required:
        - transcript
        - date
      properties:
        transcript:
          type: string
          description: The raw medical transcript text to be processed into a clinical note
          example: >-
            Hey, how's it going? Good good yeah, so what's going on? Yeah, hi I'm
            Edward yeah hi hi Edward. How's it going? Yeah, good good. So I've been
            having a couple of issues like my back pain and knee pain.
        date:
          type: string
          format: date
          description: Date of the patient encounter
        language:
          type: string
          enum: ['en', 'es', 'fr', 'de', 'it', 'pt', 'ru', 'zh']
          default: 'en'
          description: >-
            Language code for the transcript content. While multiple languages are supported, 
            English ('en') is recommended for optimal output quality and accuracy.
          example: 'en'
        noteType:
          type: object
          description: Configuration object specifying the style and format of the generated note
          properties:
            description:
              type: string
              description: A brief overview of the note.
            type:
              type: string
              description: >-
                Determines the type of note to generate.

                - Use `note_style` to provide a note style string

                - Use `note_template` to provide a [Note Template](/api-reference/schemas/note-template) payload

                - Use `soap` for the default SOAP template
              enum:
                - soap
                - note_style
                - note_template
              default: soap
              example: note_style
            template:
              oneOf:
                - type: string
                - type: object
              description: >-
                Custom template to generate the note. This is applicable only when `type` 
                is set to `note_style` or `note_template`.

                - When `type` is `note_style`, this is a note style string

                - When `type` is `note_template`, this is a [Note Template](/api-reference/schemas/note-template) payload
              example: >-
                write a standard clinical SOAP note with the following sections:
                - **Subjective**: Contains detailed HPI.
                - **Objective**: Contains PE and ROS.
                - **Assessment**: Contains differential diagnoses with corresponding plans.
                - **Patient Instructions**: Contains a list of instructions for the patient.
            includeJson:
              type: boolean
              description: >-
                Determines whether to include a JSON payload in the custom note output. 
                This option is applicable only for custom notes and defaults to `false`. 
                Enabling this will increase latency and payload size.
              default: false
              example: true

        patientInfo:
          type: object
          description: Optional patient information
          properties:
            name:
              type: string
              description: Patient's full name
            dateOfBirth:
              type: string
              format: date
              description: Patient's date of birth in ISO-8601 format (YYYY-MM-DD)
            gender:
              type: string
              description: Patient's gender identity
              enum:
                - male
                - female
                - other
                - prefer not to say
                - unspecified
        previousNote:
          type: string
          description: Reference to a previous note if this is a follow-up. This field is optional.
        context:
          type: string
          nullable: true
          description: Additional context for note generation. This field is optional.
        instructions:
          type: array
          items:
            type: string
          nullable: true
          description: Special instructions for note generation. This field is optional.
          example:
            - "Use a professional and concise tone."
            - "Include key details without unnecessary elaboration."
            - "Ensure clarity for a general audience."

        medicationList:
          type: string
          description: List of up to 50 medications (comma separated) to use as reference for fixing spelling errors. This field is optional.

    CreateNoteResponse:
      type: object
      properties:
        status:
          type: string
          example: ok
          description: Status of the response
        data:
          type: object
          properties:
            noteId:
              type: string
              example: note_EXAMPLE123456789
              description: Unique identifier for the created note
        date:
          type: string
          format: date-time
          example: 2024-11-07T21:24:51Z
          description: Timestamp of the response

    CreateNoteStylePayload:
      type: object
      required:
        - sampleNote
      properties:
        sampleNote:
          type: string
          description: Sample note text to base the style on

        instructions:
          type: array
          items:
            type: string
          description: Optional instructions for note generation
          default: []

    CreateNoteStyleResponse:
      type: object
      properties:
        status:
          type: string
          description: Status of the response
          example: ok
        data:
          type: object
          properties:
            template:
              type: string
              description: The created note style
              example: "[POPULATE THIS TEMPLATE WITH THE INFORMATION FROM THE ENCOUNTER ONLY. DO NOT MAKE ANY ASSUMPTIONS. WRITE THE NOTE FROM THE PHYSICIAN'S PERSPECTIVE. DO NOT MISS ANY DETAIL IN EACH SECTION. MAKE SURE EVERY RELEVANT SENTENCE IN THE TRANSCRIPT IS ACCOUNTED FOR IN THE NOTE PRODUCED.]\n\n[INCLUDE DATE OF ENCOUNTER]\n\nCC: [INSERT CHIEF COMPLAINT]\n\nHPI:\n[SUMMARIZE THE HISTORY OF PRESENT ILLNESS IN PARAGRAPH FORM, FOLLOWING THESE GUIDELINES:]\n•..."
        date:
          type: string
          format: date-time
          description: Timestamp of the response

    GetAudioTranscriptionResponse:
      type: object
      properties:
        status:
          type: string
          example: ok
          description: Status of the response
        data:
          type: object
          properties:
            id:
              type: string
              example: tr_EXAMPLE123456789
              description: Unique identifier for the audio transcription
            payload:
              type: object
              description: Either markdown or JSON representation of the note. Both can be present as well.
              properties:
                transcription:
                  type: string
                  description: Transcription of the audio
            timestamp:
              type: object
              properties:
                start:
                  type: integer
                  example: 1731014849730
                  description: Start timestamp
                complete:
                  type: integer
                  example: 1731014853958
                  description: Complete timestamp
        date:
          type: string
          format: date-time
          example: 2024-11-07T21:27:39Z
          description: Timestamp of the response

    CreateAudioTranscriptionPayload:
      type: object
      properties:
        audio:
          type: string
          format: binary
          description: >-
            Audio file to transcribe (supported formats: wav, mp3, m4a, ogg)
        language:
          type: string
          description: >-
            Language code for transcription:

            - English (en-US, en-GB)
            - Spanish (es)
            - French (fr)
            - German (de)
            - Italian (it)
            - Portuguese (pt)
            - Dutch (nl)
            - Japanese (ja)
            - Korean (ko)
            - Chinese (zh)
            - Russian (ru)
          example: en-US
      required:
        - audio

    CreateAudioTranscriptionResponse:
      type: object
      properties:
        status:
          type: string
          example: "ok"
        data:
          type: object
          properties:
            transcriptionId:
              type: string
              description: "Unique identifier for the audio transcription request."
              example: "tr_EXAMPLE123456789"
            message:
              type: string
              description: "Informational message about the request status."
              example: "Your transcription request has been received and is currently processing."
            status:
              type: string
              description: "The processing status of the transcription request. Always 'pending'."
              example: "pending"

    DeleteResponse:
      type: object
      properties:
        status:
          type: string
          example: ok
          description: Status of the response
        date:
          type: string
          format: date-time
          example: 2024-11-21T14:38:24.093Z
          description: Timestamp of the response

    Error:
      required:
        - error
        - message
      type: object
      properties:
        error:
          type: integer
          format: int32
        message:
          type: string

    SoapNote:
      type: object
      properties:
        chief_complaints:
          type: array
          items:
            type: string
          description: List of chief complaints
        history_of_present_illness_summary:
          type: string
          description: History of Present Illness summary
        history_of_present_illness:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              detail:
                type: string
        physical_exam:
          type: object
          properties:
            vitals:
              type: object
              properties:
                bp:
                  type: string
                  description: Blood pressure
                heart_rate:
                  type: integer
                  description: Heart rate
                respiratory_rate:
                  type: integer
                  description: Respiratory rate
                temperature:
                  type: integer
                  description: Temperature
            general_appearance:
              type: array
              items:
                type: string
            head:
              type: array
              items:
                type: string
            eyes:
              type: array
              items:
                type: string
            ears:
              type: array
              items:
                type: string
            nose:
              type: array
              items:
                type: string
            throat:
              type: array
              items:
                type: string
            neck:
              type: array
              items:
                type: string
            respiratory:
              type: array
              items:
                type: string
            cardiovascular:
              type: array
              items:
                type: string
            gastrointestinal:
              type: array
              items:
                type: string
            genitourinary:
              type: array
              items:
                type: string
            neurological:
              type: array
              items:
                type: string
            musculoskeletal:
              type: array
              items:
                type: string
            other:
              type: array
              items:
                type: string
        review_of_systems:
          type: object
          properties:
            general:
              type: array
              items:
                type: string
            skin:
              type: array
              items:
                type: string
            head:
              type: array
              items:
                type: string
            ears:
              type: array
              items:
                type: string
            eyes:
              type: array
              items:
                type: string
            nose:
              type: array
              items:
                type: string
            throat:
              type: array
              items:
                type: string
            neck:
              type: array
              items:
                type: string
            breasts:
              type: array
              items:
                type: string
            respiratory:
              type: array
              items:
                type: string
            cardiovascular:
              type: array
              items:
                type: string
            gastrointestinal:
              type: array
              items:
                type: string
            genitourinary:
              type: array
              items:
                type: string
            vascular:
              type: array
              items:
                type: string
            musculoskeletal:
              type: array
              items:
                type: string
            neurological:
              type: array
              items:
                type: string
            hematologic:
              type: array
              items:
                type: string
            endocrine:
              type: array
              items:
                type: string
            psychiatric:
              type: array
              items:
                type: string
        assessment_and_plan:
          type: array
          items:
            type: object
            properties:
              problem:
                type: string
              diagnosis_title:
                type: string
              assessment:
                type: string
              plan:
                type: string
              icd_10:
                type: object
                properties:
                  code:
                    type: string
                  description:
                    type: string
        past_medical_history:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              status:
                type: string
              began:
                type: string
              ended:
                type: string
                nullable: true
        family_history:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              relationship:
                type: string
              status:
                type: string
              began:
                type: string
              ended:
                type: string
                nullable: true
        social_history:
          type: object
          properties:
            occupation:
              type: string
            marital_status:
              type: string
            children:
              type: string
        patient_instructions:
          type: array
          items:
            type: string
        cpt_icd10_code_pairs:
          type: array
          items:
            type: object
            properties:
              cpt:
                type: string
              icd_10:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                    description:
                      type: string
        billing_cpt:
          type: object
          additionalProperties:
            type: string
        billing_icd10:
          type: object
          additionalProperties:
            type: string

    BaseSection:
      type: object
      description: Base structure for different content sections.
      properties:
        id:
          type: string
          description: Unique identifier for the section.
        type:
          type: string
          enum: [heading, text, list]
          description: Specifies the type of content in the section.

    TextContentProperties:
      type: object
      description: Common properties for text-based content.
      properties:
        bold:
          type: boolean
          description: Whether the text should be bold.
        italic:
          type: boolean
          description: Whether the text should be italicized.
        hideIfEmpty:
          type: boolean
          description: Whether to hide the content if it's empty.
        formatting_style:
          type: string
          enum: [markdown, plain]
          default: markdown
          description: Specifies the formatting style of the text.
        detail_level:
          type: string
          enum: [exhaustive, detailed, standard, brief, minimal]
          default: standard
          description: Determines the level of detail in the text content.
        tone:
          type: string
          enum: [formal, casual, technical, friendly, instructional]
          default: formal
          description: Defines the tone of the generated text.
        emptyPlaceholder:
          type: string
          description: Placeholder text to display if content is empty.

    HeadingSection:
      allOf:
        - $ref: "#/components/schemas/BaseSection"
      description: Defines a heading section with properties and children.
      properties:
        type:
          type: string
          enum: [heading]
        level:
          type: integer
          minimum: 0
          maximum: 6
          description: Specifies the heading level (e.g., H1 to H6).
        text:
          type: string
          description: The actual text of the heading.
        children:
          type: array
          items:
            $ref: "#/components/schemas/Section"
          description: Nested sections under the heading.

    TextSection:
      allOf:
        - $ref: "#/components/schemas/BaseSection"
      description: Defines a text section with properties and generated results.
      properties:
        type:
          type: string
          enum: [text]
        properties:
          $ref: "#/components/schemas/TextContentProperties"
        label:
          type: string
          description: An optional label for the text section.
        bold_label:
          type: boolean
          description: Whether the label should be bold.
        italic_label:
          type: boolean
          description: Whether the label should be italicized.
        list_type:
          type: string
          enum: [bullet, numeric]
          description: Defines whether text should be formatted as a bullet or numeric list.
        min_sentences:
          type: integer
          description: Minimum number of sentences required.
        max_sentences:
          type: integer
          description: Maximum number of sentences allowed.
        min_paragraphs:
          type: integer
          description: Minimum number of paragraphs required.
        max_paragraphs:
          type: integer
          description: Maximum number of paragraphs allowed.
        result:
          type: string
          description: The generated text content.

    ListSection:
      allOf:
        - $ref: "#/components/schemas/BaseSection"
      description: Defines a list section with properties and generated list items.
      properties:
        type:
          type: string
          enum: [list]
        properties:
          $ref: "#/components/schemas/TextContentProperties"
        list_type:
          type: string
          enum: [bullet, numeric]
          description: Defines whether the list is bulleted or numbered.
        min_items:
          type: integer
          description: Minimum number of items required in the list.
        max_items:
          type: integer
          description: Maximum number of items allowed in the list.
        result:
          type: array
          items:
            type: string
          description: The generated list items.

    Section:
      oneOf:
        - $ref: "#/components/schemas/HeadingSection"
        - $ref: "#/components/schemas/TextSection"
        - $ref: "#/components/schemas/ListSection"
      description: Union of different content section types.

    NoteTemplate:
      type: object
      description: Defines the structure of a note template with validation for heading nesting depth.
      properties:
        id:
          type: string
          description: Unique identifier for the note template.
          example: template_EXAMPLE123456789
        title:
          type: string
          description: Title of the note template.
        globalPrompt:
          type: string
          description: Optional global prompt for content generation.
        sections:
          type: array
          items:
            $ref: "#/components/schemas/Section"
          description: List of sections included in the note template.
      required:
        - id
        - title
        - sections

    CreateCodingPayload:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: Transcript text of the medical conversation to analyze
          example: >-
            [0:00]
            Doctor: Hi John, good to see you again. How've you been holding up?

            Patient: Hey doc. It's been alright, but I've been feeling kind of off the last few weeks.

    CreateCodingResponse:
      type: object
      description: Response containing the initial status of a newly created coding analysis request
      properties:
        data:
          type: object
          description: Data object containing the coding analysis metadata
          properties:
            id:
              type: string
              description: Unique identifier for the coding analysis request
              example: coding_EXAMPLE123456789
            status:
              type: string
              description: Status of the coding analysis request
              example: pending
              enum:
                - pending
                - processing
                - complete
                - failed
            created_at:
              type: string
              format: date-time
              description: Timestamp when the request was created
              example: 2025-05-08T15:07:54.984Z
            updated_at:
              type: string
              format: date-time
              description: Timestamp when the request was last updated
              example: 2025-05-08T15:07:54.984Z

    GetCodingResponse:
      type: object
      description: Response containing the complete coding analysis results
      properties:
        data:
          type: object
          description: Data object containing the coding analysis and its results
          properties:
            id:
              type: string
              description: Unique identifier for the coding analysis request
              example: coding_EXAMPLE123456789
            status:
              type: string
              description: Status of the coding analysis request
              example: completed
              enum:
                - pending
                - processing
                - completed
                - failed
            created_at:
              type: string
              format: date-time
              description: Timestamp when the request was created
              example: 2025-05-08T15:07:54.984Z
            updated_at:
              type: string
              format: date-time
              description: Timestamp when the request was last updated
              example: 2025-05-08T15:08:22.499Z
            processing_time_ms:
              type: number
              description: Time taken to process the request in milliseconds
              example: 27340.929076
            result:
              type: object
              description: Results of the coding analysis
              properties:
                diagnoses:
                  type: array
                  description: List of diagnoses identified in the text
                  items:
                    $ref: "#/components/schemas/CodingDiagnosis"
                procedures:
                  type: array
                  description: List of procedures identified in the text
                  items:
                    $ref: "#/components/schemas/CodingProcedure"

    CodingDiagnosis:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the diagnosis within the response
          example: diagnosis-example-1
        code:
          type: object
          properties:
            coding:
              type: array
              items:
                type: object
                properties:
                  system:
                    type: string
                    description: Coding system identifier
                    example: http://hl7.org/fhir/sid/icd-10-cm
                  code:
                    type: string
                    description: Code value from the specified system
                    example: I10
                  display:
                    type: string
                    description: Human-readable representation of the code
                    example: Essential (primary) hypertension
              example:
                - system: http://hl7.org/fhir/sid/icd-10-cm
                  code: I10
                  display: Essential (primary) hypertension
                - system: http://snomed.info/sct
                  code: "59621000"
                  display: Essential hypertension
            text:
              type: string
              description: Plain text representation of the diagnosis
              example: Hypertension
        text_span:
          type: object
          properties:
            start_char:
              type: integer
              description: Starting character position in the original text
              example: 1022
            end_char:
              type: integer
              description: Ending character position in the original text
              example: 1039
            text:
              type: string
              description: The actual text from the transcript
              example: slightly elevated

    CodingProcedure:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the procedure within the response
          example: procedure-example-1
        code:
          type: object
          properties:
            coding:
              type: array
              items:
                type: object
                properties:
                  system:
                    type: string
                    description: Coding system identifier
                    example: http://www.ama-assn.org/go/cpt
                  code:
                    type: string
                    description: Code value from the specified system
                    example: 93000
                  display:
                    type: string
                    description: Human-readable representation of the code
                    example: Electrocardiogram, routine ECG with at least 12 leads; with interpretation and report
            text:
              type: string
              description: Plain text representation of the procedure
              example: EKG
        text_span:
          type: object
          properties:
            start_char:
              type: integer
              description: Starting character position in the original text
              example: 2124
            end_char:
              type: integer
              description: Ending character position in the original text
              example: 2127
            text:
              type: string
              description: The actual text from the transcript
              example: EKG

    TextToJsonPayload:
      type: object
      description: Request payload for transforming unstructured text into structured JSON
      required:
        - text
        - schema
      properties:
        text:
          type: string
          description: Unstructured text to transform
          example: Patient is a 45-year-old male presenting with chest pain...
        schema:
          type: object
          description: JSON Schema for transforming text into structured data
          example:
            type: object
            properties:
              patientInfo:
                type: object
                properties:
                  age:
                    type: number
                  gender:
                    type: string
                  allergies:
                    type: ["array", "null"]
                    items:
                      type: string
                required: [age, gender, allergies]
              symptoms:
                type: array
                items:
                  type: string
              diagnosis:
                type: array
                items:
                  type: string
              severityLevel:
                type: string
                enum: ["mild", "moderate", "severe", "critical"]
              notes:
                type: ["string", "null"]
                description: "Optional clinical notes that might be null"
            required: [patientInfo, symptoms, diagnosis, severityLevel, notes]

    TextToJsonResponse:
      type: object
      description: Response containing the structured JSON data extracted from text
      properties:
        data:
          type: object
          description: Extracted structured data that conforms to the provided schema
          example:
            patientInfo:
              age: 45
              gender: male
              allergies: null
            symptoms:
              - chest pain
            diagnosis: []
            severityLevel: "moderate"
            notes: null

    MacroDetectPayload:
      type: object
      description: Request payload for detecting and expanding macros in medical text
      required:
        - text
        - macros
      properties:
        text:
          type: string
          description: The text to analyze for macros
          example: "The patient is a 54-year-old male here for a routine follow-up. Reports feeling well overall. Quickcheck. Denies any new symptoms. Medications reviewed and no changes needed. No signs of infection. Standard plan applies. Discussed flu vaccine and colonoscopy timeline. Return visit scheduled in six months."
        macros:
          type: array
          description: An array of macro objects to detect in the text
          items:
            type: object
            description: A macro definition with examples and expansion text
            required:
              - id
              - examples
              - expansion_text
            properties:
              id:
                type: string
                description: A unique identifier for the macro
                example: brief_exam_note
              examples:
                type: array
                description: An array of example strings that represent the macro in text
                items:
                  type: string
                  description: An example text string representing the macro
                example:
                  - quickcheck
                  - quick check
                  - quick-check
              expansion_text:
                type: string
                description: The text that should replace the macro when expanded
                example: "General: Patient appears well-nourished and in no acute distress. HEENT: Normocephalic, atraumatic. Heart: Regular rate and rhythm. Lungs: Clear to auscultation bilaterally."

    MacroDetectResponse:
      type: object
      description: Response containing detected macros and expanded text
      properties:
        data:
          type: object
          description: Result data object containing detections and expanded text
          properties:
            detections:
              type: array
              description: Array of detected macros in the text
              items:
                type: object
                description: A single macro detection result
                properties:
                  macro_id:
                    type: string
                    description: The ID of the detected macro
                    example: brief_exam_note
                  text_span:
                    type: object
                    description: Position information about the detected macro in the original text
                    properties:
                      start_char:
                        type: integer
                        description: The starting character position of the detected macro in the original text
                        example: 94
                      end_char:
                        type: integer
                        description: The ending character position of the detected macro in the original text
                        example: 104
                      text:
                        type: string
                        description: The text of the detected macro
                        example: Quickcheck
                  confidence:
                    type: number
                    description: A confidence score between 0 and 1 indicating the system's confidence in the detection
                    example: 0.98
                    minimum: 0
                    maximum: 1
            expanded_text:
              type: string
              description: The original text with all detected macros expanded
              example: "The patient is a 54-year-old male here for a routine follow-up. Reports feeling well overall. General: Patient appears well-nourished and in no acute distress. HEENT: Normocephalic, atraumatic. Heart: Regular rate and rhythm. Lungs: Clear to auscultation bilaterally.. Denies any new symptoms. Medications reviewed and no changes needed. No signs of infection. Plan: Continue current medications. Reassess in 6 months or as needed. Patient advised to follow up for any new or worsening symptoms. applies. Discussed flu vaccine and colonoscopy timeline. Return visit scheduled in six months."

  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
    accountIdAuth:
      type: apiKey
      in: header
      name: X-ACCOUNT-ID
